 --
 --  This library is free software; you can redistribute it and/or
 --  modify it under the terms of the GNU Lesser General Public
 --  License as published by the Free Software Foundation; either
 --  version 2.1 of the License, or (at your option) any later version.
 
 --  This library is distributed in the hope that it will be useful,
 --  but WITHOUT ANY WARRANTY; without even the implied warranty of
 --  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 --  Lesser General Public License for more details.
 
 --  You should have received a copy of the GNU Lesser General Public
 --  License along with this library; if not, write to the Free 
 --  Software Foundation, Inc., 51 Franklin St, Fifth Floor,
 --  Boston, MA  02110-1301  USA
 
 --  **********************************************************************


#INCLUDE "wiring.module"

VAL BYTE FORWARD  IS 'F' :
VAL BYTE BACKWARD IS 'B' :
VAL BYTE RIGHT    IS 'R' :
VAL BYTE LEFT     IS 'L' :

 -- These pins need to be parameterized.
  
VAL [2]INT PINS.MOTOR.LEFT  IS [ 2, 4 ] :
VAL [2]INT PINS.MOTOR.RIGHT IS [ 7, 8 ] :

PROC init.motor.pins ()
  SEQ
    SEQ i = 0 FOR 2
      pinMode (PINS.MOTOR.LEFT[i], OUTPUT)
    SEQ i = 0 FOR 2
      pinMode (PINS.MOTOR.RIGHT[i], OUTPUT)
:

PROC setMotor ( VAL []INT pins, VAL INT motor.top.value, motor.bottom.value )
  SEQ
    digitalWrite ( pins[0], motor.top.value )
    digitalWrite ( pins[1], motor.bottom.value )
:

PROC forward ()
  SEQ
    setMotor ( PINS.MOTOR.LEFT, HIGH, LOW )
    setMotor ( PINS.MOTOR.RIGHT, HIGH, LOW )
:

PROC backward ()
  SEQ
    setMotor ( PINS.MOTOR.LEFT, LOW, HIGH )
    setMotor ( PINS.MOTOR.RIGHT, LOW, HIGH )
:
   
PROC left ()
  SEQ
    setMotor ( PINS.MOTOR.LEFT, LOW, HIGH )
    setMotor ( PINS.MOTOR.RIGHT, HIGH, LOW )
:

PROC right ()
  SEQ
    setMotor ( PINS.MOTOR.LEFT, HIGH, LOW )
    setMotor ( PINS.MOTOR.RIGHT, LOW, HIGH )
:

PROC motors ( CHAN BYTE direction ? )
  BYTE current.direction :
  INT ERROR :
  SEQ
    init.motor.pins ()
    WHILE TRUE 
      SEQ
        direction ? current.direction
        
        CASE current.direction
        
          FORWARD
            forward ()
          BACKWARD
            backward ()
          LEFT
            left ()
          RIGHT
            right ()
         
          ELSE
            ERROR := 1
          
:


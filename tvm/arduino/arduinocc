#!/bin/bash 

# Source in everything we need--both the KRoC env and 
# variables for Arduino compilation and upload.

source avr-kroc-setup.sh
source arduinocc-environment.sh

# Sanity check
if [ "$1" == "" ]; then
  # Print reasonable documentation for the students
  echo "Wrong."
  exit
fi

if [ "$1" == "firmware" ]; then
  echo "Uploading Transterpreter Virtual Machine"
  avrdude -C $TVM_AVRDUDE_CONF \
     $TVM_AVRDUDE_FIRMWARE_FLAGS \
    -P $2 -b $TVM_UPLOAD_RATE -c stk500v1 \
    -U flash:w:$TVM_ARDUINO_FIRMWARE
  exit
fi

if [ "$2" == "" ]; then
  # Print that they need the filename
  echo "Also wrong."
  exit
fi

BASE=`basename $2 .occ`

# Another sanity check
if [ ! -f $BASE.occ ]; then
  echo "No occam file."
  exit
fi

UPLOAD_PORT=$1
AVRDUDE_FLAGS="$TVM_AVRDUDE_CODE_FLAGS -P $UPLOAD_PORT"
AVRDUDE_WRITE_OCCAM="-D -U flash:w:$BASE.hex"

if [ -f $BASE.tbc ]; then
  echo "Removing old TBC file..."
  rm $BASE.tbc
fi


echo "Compiling..."
avr-occbuild \
  --search /opt/occam/share/tvm/avr-vtinclude \
  --search /opt/occam/share/tvm/avr-vtlib \
  --search /opt/occam/lib \
  -DF.CPU=$TVM_F_CPU --program $BASE.occ

if [ $? -eq 0 ]; then

  if [ -f $BASE.hex ]; then
    echo "Removing old HEX file..."
    rm $BASE.hex
  fi

  if [ $? -eq 0 ]; then
    echo "Converting to .hex..."
    binary-to-ihex $TVM_BYTECODE_ADDR $BASE.tbc $BASE.hex
  fi


  if [ $? -eq 0 ]; then
    echo "Uploading..."
    reset-arduino $UPLOAD_PORT
    avrdude -C $TVM_AVRDUDE_CONF $AVRDUDE_FLAGS $AVRDUDE_WRITE_OCCAM
  fi

  if [ $? -eq 0 ]; then
    echo "Reading..."
    read-arduino $UPLOAD_PORT
  fi
fi

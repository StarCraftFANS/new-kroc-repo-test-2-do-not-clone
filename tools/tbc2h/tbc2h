#!/usr/bin/env python

import sys

pre = """
/*
* Autogenerated by tbc2h!
*/

#ifndef BYTECODE_H
#define BYTECODE_H

const unsigned char transputerbytecode[] = {
"""

post = """
};

#endif //BYTECODE_H

"""

if len(sys.argv) < 2:
	print("usage: tbc2h <tbc file>")
	exit(1)

# Open the file specified as first argument
try:
	fInp = open(sys.argv[1], 'rb')
except IOError:
	print("{file}: file not found".format(file = sys.argv[1]))
	exit(2)

# Check magic number of the file
magicNumber = fInp.read(4)
if magicNumber != "TEnc":
	print("{file}: wrong format".format(file = sys.argv[1]))
	exit(3)

# Resetting the position to the beginning of the file
fInp.seek(0)

#if sys.argv[1].endswith(".tbc"):
#	fOutName = sys.argv[1].replace(".tbc",".h")
#else:
#	fOutName = sys.argv[1] + ".h"
fOutName = "bytecode.h"

# Open header file to write output	
fOut = open(fOutName, 'w')

fOut.write(pre)

byte = fInp.read(1)

i = 0

while byte != "":
	if(i == 4):
		fOut.write("\n")
		i = 0
	fOut.write("{b}".format(b = hex(ord(byte))))
	byte = fInp.read(1)
	if(byte != ""):
		fOut.write(",")
	i += 1

fInp.close()

fOut.write(post)

fOut.close()
